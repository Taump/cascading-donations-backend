const { getRules } = require("../utils")

const truncate = (input, length) => input.length > length ? `${input.substring(0, length)}...` : input;

module.exports = bannerController = async (request, reply) => {
  if (!request.query.repo || request.query.repo.split("/").length !== 2) {
    reply.badRequest();
  } else {
    const fullName = request.query.repo;
    const rules = await getRules(request.query.repo);
    const percentForOwner = rules[fullName] || 0;
    const rulesNotForOwner = Object.keys(rules).filter(r => r !== fullName).map((repo) => ({ repo, percent: rules[repo] }));
    
    reply.headers({
      'Content-Type': 'image/svg+xml',
      'Cache-Control': 'max-age=3600'
    })

    reply.send(`
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ${rulesNotForOwner.length === 0 ? 290 : 400} ${rulesNotForOwner.length === 0 ? 97 : 100 + ((rulesNotForOwner.length + 1) * 20)}" width="${rulesNotForOwner.length === 0 ? "300px" : "400px"}" height="${`${rulesNotForOwner.length === 0 ? 100 : 105 + ((rulesNotForOwner.length + 1) * 20)}px`}">
        <rect rx="10" ry="10" stroke-linejoin="round" x="0" y="0" width="${rulesNotForOwner.length === 0 ? 285 : 400}" height="${rulesNotForOwner.length === 0 ? 97 : 100 + ((rulesNotForOwner.length + 1) * 20)}" fill="#ddd" />
        <rect rx="10" ry="10" stroke-linejoin="round" x="5" y="5" width="${rulesNotForOwner.length === 0 ? 275 : 390}" height="${rulesNotForOwner.length === 0 ? 87 : 90 + ((rulesNotForOwner.length + 1) * 20)}" fill="#fff" />
        <svg x="15" y="15" width="255" height="67" viewBox="0 0 255 67" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M89.1087 15.252C87.5137 15.252 86.2786 15.8535 85.4036 17.0566C84.5286 18.2507 84.0911 19.9186 84.0911 22.0605C84.0911 26.5176 85.7637 28.7461 89.1087 28.7461C90.5124 28.7461 92.2122 28.3952 94.2083 27.6934V31.248C92.5677 31.9316 90.7357 32.2734 88.7122 32.2734C85.8047 32.2734 83.5807 31.3939 82.0404 29.6348C80.5 27.8665 79.7298 25.3327 79.7298 22.0332C79.7298 19.9551 80.1081 18.1367 80.8646 16.5781C81.6211 15.0104 82.7057 13.8118 84.1185 12.9824C85.5404 12.1439 87.2038 11.7246 89.1087 11.7246C91.0501 11.7246 93.0006 12.194 94.9603 13.1328L93.5931 16.5781C92.8457 16.2227 92.0937 15.9128 91.3372 15.6484C90.5807 15.3841 89.8379 15.252 89.1087 15.252ZM110.71 32L109.261 27.2422H101.974L100.525 32H95.9583L103.013 11.9297H108.195L115.277 32H110.71ZM108.249 23.6875C106.91 19.3763 106.153 16.9382 105.98 16.373C105.816 15.8079 105.697 15.3613 105.624 15.0332C105.324 16.1999 104.462 19.0846 103.04 23.6875H108.249ZM129.605 26.4492C129.605 28.2539 128.953 29.6758 127.65 30.7148C126.355 31.7539 124.551 32.2734 122.236 32.2734C120.103 32.2734 118.216 31.8724 116.576 31.0703V27.1328C117.924 27.7344 119.064 28.1582 119.993 28.4043C120.932 28.6504 121.789 28.7734 122.564 28.7734C123.493 28.7734 124.204 28.5957 124.697 28.2402C125.198 27.8848 125.449 27.3561 125.449 26.6543C125.449 26.2624 125.339 25.916 125.12 25.6152C124.902 25.3053 124.578 25.0091 124.15 24.7266C123.73 24.444 122.869 23.9928 121.566 23.373C120.344 22.7988 119.428 22.2474 118.818 21.7188C118.207 21.1901 117.719 20.5749 117.355 19.873C116.99 19.1712 116.808 18.3509 116.808 17.4121C116.808 15.6439 117.405 14.2539 118.599 13.2422C119.802 12.2305 121.461 11.7246 123.576 11.7246C124.615 11.7246 125.604 11.8477 126.542 12.0938C127.49 12.3398 128.479 12.6862 129.509 13.1328L128.142 16.4277C127.076 15.9902 126.191 15.6849 125.49 15.5117C124.797 15.3385 124.113 15.252 123.439 15.252C122.637 15.252 122.021 15.4388 121.593 15.8125C121.165 16.1862 120.951 16.6738 120.951 17.2754C120.951 17.6491 121.037 17.9772 121.21 18.2598C121.383 18.5332 121.657 18.8021 122.031 19.0664C122.413 19.3216 123.311 19.7865 124.724 20.4609C126.592 21.3542 127.873 22.252 128.566 23.1543C129.258 24.0475 129.605 25.1458 129.605 26.4492ZM141.718 15.252C140.123 15.252 138.888 15.8535 138.013 17.0566C137.138 18.2507 136.701 19.9186 136.701 22.0605C136.701 26.5176 138.373 28.7461 141.718 28.7461C143.122 28.7461 144.822 28.3952 146.818 27.6934V31.248C145.177 31.9316 143.345 32.2734 141.322 32.2734C138.414 32.2734 136.19 31.3939 134.65 29.6348C133.109 27.8665 132.339 25.3327 132.339 22.0332C132.339 19.9551 132.717 18.1367 133.474 16.5781C134.23 15.0104 135.315 13.8118 136.728 12.9824C138.15 12.1439 139.813 11.7246 141.718 11.7246C143.66 11.7246 145.61 12.194 147.57 13.1328L146.202 16.5781C145.455 16.2227 144.703 15.9128 143.947 15.6484C143.19 15.3841 142.447 15.252 141.718 15.252ZM163.32 32L161.87 27.2422H154.583L153.134 32H148.568L155.622 11.9297H160.804L167.886 32H163.32ZM160.859 23.6875C159.519 19.3763 158.762 16.9382 158.589 16.373C158.425 15.8079 158.307 15.3613 158.234 15.0332C157.933 16.1999 157.072 19.0846 155.65 23.6875H160.859ZM186.999 21.8145C186.999 25.1048 186.061 27.625 184.183 29.375C182.314 31.125 179.612 32 176.076 32H170.415V12.0117H176.691C179.954 12.0117 182.488 12.873 184.292 14.5957C186.097 16.3184 186.999 18.7246 186.999 21.8145ZM182.597 21.9238C182.597 17.6309 180.701 15.4844 176.91 15.4844H174.654V28.5H176.472C180.555 28.5 182.597 26.3079 182.597 21.9238ZM191.142 32V12.0117H195.38V32H191.142ZM218.144 32H212.757L204.062 16.8789H203.939C204.112 19.5495 204.199 21.4544 204.199 22.5938V32H200.411V12.0117H205.757L214.439 26.9824H214.535C214.398 24.3848 214.329 22.5482 214.329 21.4727V12.0117H218.144V32ZM230.777 20.7754H238.706V31.1387C237.421 31.5579 236.209 31.8496 235.07 32.0137C233.939 32.1868 232.782 32.2734 231.597 32.2734C228.58 32.2734 226.274 31.3893 224.679 29.6211C223.093 27.8438 222.3 25.2962 222.3 21.9785C222.3 18.752 223.221 16.2363 225.062 14.4316C226.912 12.627 229.473 11.7246 232.745 11.7246C234.796 11.7246 236.774 12.1348 238.679 12.9551L237.271 16.3457C235.812 15.6165 234.295 15.252 232.718 15.252C230.886 15.252 229.419 15.8672 228.316 17.0977C227.213 18.3281 226.661 19.9824 226.661 22.0605C226.661 24.2298 227.104 25.8887 227.988 27.0371C228.881 28.1764 230.175 28.7461 231.87 28.7461C232.755 28.7461 233.652 28.6549 234.564 28.4727V24.3027H230.777V20.7754ZM97.2025 48.8145C97.2025 52.1048 96.2637 54.625 94.3861 56.375C92.5176 58.125 89.8151 59 86.2786 59H80.6185V39.0117H86.8939C90.1569 39.0117 92.6908 39.873 94.4954 41.5957C96.3001 43.3184 97.2025 45.7246 97.2025 48.8145ZM92.8001 48.9238C92.8001 44.6309 90.9043 42.4844 87.1126 42.4844H84.8568V55.5H86.6751C90.7585 55.5 92.8001 53.3079 92.8001 48.9238ZM119.488 48.9785C119.488 52.2871 118.667 54.8301 117.027 56.6074C115.386 58.3848 113.035 59.2734 109.972 59.2734C106.91 59.2734 104.558 58.3848 102.917 56.6074C101.277 54.8301 100.456 52.278 100.456 48.9512C100.456 45.6243 101.277 43.0859 102.917 41.3359C104.567 39.5768 106.928 38.6973 109.999 38.6973C113.071 38.6973 115.418 39.5814 117.04 41.3496C118.672 43.1178 119.488 45.6608 119.488 48.9785ZM104.9 48.9785C104.9 51.2116 105.324 52.8932 106.171 54.0234C107.019 55.1536 108.286 55.7188 109.972 55.7188C113.354 55.7188 115.044 53.472 115.044 48.9785C115.044 44.4759 113.363 42.2246 109.999 42.2246C108.313 42.2246 107.042 42.7943 106.185 43.9336C105.328 45.0638 104.9 46.7454 104.9 48.9785ZM141.363 59H135.976L127.281 43.8789H127.158C127.331 46.5495 127.417 48.4544 127.417 49.5938V59H123.63V39.0117H128.976L137.658 53.9824H137.753C137.617 51.3848 137.548 49.5482 137.548 48.4727V39.0117H141.363V59ZM158.644 59L157.195 54.2422H149.908L148.458 59H143.892L150.947 38.9297H156.128L163.21 59H158.644ZM156.183 50.6875C154.843 46.3763 154.087 43.9382 153.913 43.373C153.749 42.8079 153.631 42.3613 153.558 42.0332C153.257 43.1999 152.396 46.0846 150.974 50.6875H156.183ZM173.451 59H169.212V42.5391H163.785V39.0117H178.878V42.5391H173.451V59ZM181.954 59V39.0117H186.193V59H181.954ZM209.367 48.9785C209.367 52.2871 208.546 54.8301 206.906 56.6074C205.265 58.3848 202.913 59.2734 199.851 59.2734C196.788 59.2734 194.437 58.3848 192.796 56.6074C191.156 54.8301 190.335 52.278 190.335 48.9512C190.335 45.6243 191.156 43.0859 192.796 41.3359C194.446 39.5768 196.807 38.6973 199.878 38.6973C202.95 38.6973 205.297 39.5814 206.919 41.3496C208.551 43.1178 209.367 45.6608 209.367 48.9785ZM194.779 48.9785C194.779 51.2116 195.202 52.8932 196.05 54.0234C196.898 55.1536 198.165 55.7188 199.851 55.7188C203.232 55.7188 204.923 53.472 204.923 48.9785C204.923 44.4759 203.242 42.2246 199.878 42.2246C198.192 42.2246 196.921 42.7943 196.064 43.9336C195.207 45.0638 194.779 46.7454 194.779 48.9785ZM231.242 59H225.855L217.16 43.8789H217.036C217.21 46.5495 217.296 48.4544 217.296 49.5938V59H213.509V39.0117H218.855L227.536 53.9824H227.632C227.495 51.3848 227.427 49.5482 227.427 48.4727V39.0117H231.242V59ZM248.085 53.4492C248.085 55.2539 247.434 56.6758 246.13 57.7148C244.836 58.7539 243.031 59.2734 240.716 59.2734C238.583 59.2734 236.697 58.8724 235.056 58.0703V54.1328C236.405 54.7344 237.544 55.1582 238.474 55.4043C239.413 55.6504 240.27 55.7734 241.044 55.7734C241.974 55.7734 242.685 55.5957 243.177 55.2402C243.678 54.8848 243.929 54.3561 243.929 53.6543C243.929 53.2624 243.82 52.916 243.601 52.6152C243.382 52.3053 243.059 52.0091 242.63 51.7266C242.211 51.444 241.35 50.9928 240.046 50.373C238.825 49.7988 237.909 49.2474 237.298 48.7188C236.687 48.1901 236.2 47.5749 235.835 46.873C235.471 46.1712 235.288 45.3509 235.288 44.4121C235.288 42.6439 235.885 41.2539 237.079 40.2422C238.283 39.2305 239.941 38.7246 242.056 38.7246C243.095 38.7246 244.084 38.8477 245.023 39.0938C245.971 39.3398 246.96 39.6862 247.99 40.1328L246.622 43.4277C245.556 42.9902 244.672 42.6849 243.97 42.5117C243.277 42.3385 242.594 42.252 241.919 42.252C241.117 42.252 240.502 42.4388 240.074 42.8125C239.645 43.1862 239.431 43.6738 239.431 44.2754C239.431 44.6491 239.518 44.9772 239.691 45.2598C239.864 45.5332 240.137 45.8021 240.511 46.0664C240.894 46.3216 241.792 46.7865 243.204 47.4609C245.073 48.3542 246.354 49.252 247.046 50.1543C247.739 51.0475 248.085 52.1458 248.085 53.4492Z" fill="#2D2C2C"/>
          <path d="M59.6375 53.51C59.7203 53.5647 59.758 53.6256 59.774 53.6676C56.8219 56.2859 53.3481 58.4759 49.4871 60.1217C44.2636 62.3484 38.4934 63.51 32.6317 63.4999C26.77 63.4899 21.0055 62.3084 15.7929 60.064C11.9409 58.4055 8.47844 56.2046 5.5394 53.5774C5.55553 53.535 5.59364 53.4735 5.67758 53.4186C5.74704 53.3731 5.85286 53.3345 6.02586 53.355C6.21232 53.3772 6.43428 53.468 6.62425 53.6405C9.54262 56.2914 12.959 58.4711 16.7168 60.0892C21.6812 62.2267 27.1278 63.3354 32.6362 63.3448C38.1445 63.3543 43.5958 62.2644 48.5694 60.1442C52.336 58.5385 55.7633 56.3696 58.6942 53.7276C58.8841 53.5564 59.1056 53.4669 59.2913 53.4455C59.4636 53.4257 59.5687 53.4646 59.6375 53.51Z" stroke="#2D2C2C" stroke-width="7"/>
          <path d="M56.2764 26.8487C56.2764 39.6825 45.658 50.1974 32.4211 50.1974C19.1842 50.1974 8.5658 39.6825 8.5658 26.8487C8.5658 14.015 19.1842 3.5 32.4211 3.5C45.658 3.5 56.2764 14.015 56.2764 26.8487Z" fill="white" stroke="#2D2C2C" stroke-width="7"/>
        </svg>

        ${rulesNotForOwner.length !== 0 && `<g style="user-select: none; -ms-user-select: none; -moz-user-select: none; -khtml-user-select: none; -webkit-user-select: none; -webkit-touch-callout: none; color: #2D2C2C;">
          <line stroke-linecap="round" x1="15" y1="100" x2="80" y2="100" stroke-width="5" stroke="#ddd" />
          <text x="100" font-family="Segoe UI, Ubuntu, Sans-Serif" className="unselectable" y="105">${truncate(fullName, 26)} - ${percentForOwner}%</text>
        </g>`}

        ${rulesNotForOwner.map((r, i) => `<g>
          <line stroke-linecap="round" x1="32" y1="${100 + (i === rulesNotForOwner.length - 1 ? 20 : 22) * i}" x2="32" y2="${125 + (i === rulesNotForOwner.length - 1 ? 20 : 22) * i}" stroke-width="5" stroke="#ddd" />
          <line stroke-linecap="round" x1="32" y1="${120 + 20 * i}" x2="100" y2="${120 + 20 * i}" stroke-width="5" stroke="#ddd" />
          <g style="user-select: none; -ms-user-select: none; -moz-user-select: none; -khtml-user-select: none; -webkit-user-select: none; -webkit-touch-callout: none; color: #2D2C2C;"><text font-family="Segoe UI, Ubuntu, Sans-Serif" font-weight="300" className="unselectable" x="120" y="${125 + 20 * i}">${truncate(r.repo, 24)} - ${r.percent}%</text></g>
        </g>`).join(" ")}
      </svg>
    `)
  }
}

