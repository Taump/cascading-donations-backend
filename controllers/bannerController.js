const { getRules } = require("../utils")

const truncate = (input, length) => input.length > length ? `${input.substring(0, length)}...` : input;

module.exports = bannerController = async (request, reply) => {
  if (!request.query.repo || request.query.repo.split("/").length !== 2) {
    reply.badRequest();
  } else {
    const fullName = request.query.repo;
    const rules = await getRules(request.query.repo);
    const percentForOwner = rules[fullName] || 0;
    const rulesNotForOwner = Object.keys(rules).filter(r => r !== fullName).map((repo) => ({ repo, percent: rules[repo] }));
    
    reply.headers({
      'Content-Type': 'image/svg+xml',
    })

    reply.send(`
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ${rulesNotForOwner.length === 0 ? 290 : 400} ${rulesNotForOwner.length === 0 ? 97 : 100 + ((rulesNotForOwner.length + 1) * 20)}" width="${rulesNotForOwner.length === 0 ? "300px" : "400px"}" height="${`${rulesNotForOwner.length === 0 ? 100 : 105 + ((rulesNotForOwner.length + 1) * 20)}px`}">
        <defs>
          <style type="text/css">
            @import url('https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400italic,500,500italic,700,700italic,900,900italic');
          </style>
        </defs>
        <rect rx="10" ry="10" stroke-linejoin="round" x="0" y="0" width="${rulesNotForOwner.length === 0 ? 285 : 400}" height="${rulesNotForOwner.length === 0 ? 97 : 100 + ((rulesNotForOwner.length + 1) * 20)}" fill="#ddd" />
        <rect rx="10" ry="10" stroke-linejoin="round" x="5" y="5" width="${rulesNotForOwner.length === 0 ? 275 : 390}" height="${rulesNotForOwner.length === 0 ? 87 : 90 + ((rulesNotForOwner.length + 1) * 20)}" fill="#fff" />
        <svg x="15" y="15" width="255" height="67" viewBox="0 0 255 67" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M91.0059 14.252C89.4108 14.252 88.1758 14.8535 87.3008 16.0566C86.4258 17.2507 85.9883 18.9186 85.9883 21.0605C85.9883 25.5176 87.6608 27.7461 91.0059 27.7461C92.4095 27.7461 94.1094 27.3952 96.1055 26.6934V30.248C94.4648 30.9316 92.6328 31.2734 90.6094 31.2734C87.7018 31.2734 85.4779 30.3939 83.9375 28.6348C82.3971 26.8665 81.627 24.3327 81.627 21.0332C81.627 18.9551 82.0052 17.1367 82.7617 15.5781C83.5182 14.0104 84.6029 12.8118 86.0156 11.9824C87.4375 11.1439 89.1009 10.7246 91.0059 10.7246C92.9473 10.7246 94.8978 11.194 96.8574 12.1328L95.4902 15.5781C94.7428 15.2227 93.9909 14.9128 93.2344 14.6484C92.4779 14.3841 91.735 14.252 91.0059 14.252ZM112.607 31L111.158 26.2422H103.871L102.422 31H97.8555L104.91 10.9297H110.092L117.174 31H112.607ZM110.146 22.6875C108.807 18.3763 108.05 15.9382 107.877 15.373C107.713 14.8079 107.594 14.3613 107.521 14.0332C107.221 15.1999 106.359 18.0846 104.938 22.6875H110.146ZM131.502 25.4492C131.502 27.2539 130.85 28.6758 129.547 29.7148C128.253 30.7539 126.448 31.2734 124.133 31.2734C122 31.2734 120.113 30.8724 118.473 30.0703V26.1328C119.822 26.7344 120.961 27.1582 121.891 27.4043C122.829 27.6504 123.686 27.7734 124.461 27.7734C125.391 27.7734 126.102 27.5957 126.594 27.2402C127.095 26.8848 127.346 26.3561 127.346 25.6543C127.346 25.2624 127.236 24.916 127.018 24.6152C126.799 24.3053 126.475 24.0091 126.047 23.7266C125.628 23.444 124.766 22.9928 123.463 22.373C122.242 21.7988 121.326 21.2474 120.715 20.7188C120.104 20.1901 119.617 19.5749 119.252 18.873C118.887 18.1712 118.705 17.3509 118.705 16.4121C118.705 14.6439 119.302 13.2539 120.496 12.2422C121.699 11.2305 123.358 10.7246 125.473 10.7246C126.512 10.7246 127.501 10.8477 128.439 11.0938C129.387 11.3398 130.376 11.6862 131.406 12.1328L130.039 15.4277C128.973 14.9902 128.089 14.6849 127.387 14.5117C126.694 14.3385 126.01 14.252 125.336 14.252C124.534 14.252 123.919 14.4388 123.49 14.8125C123.062 15.1862 122.848 15.6738 122.848 16.2754C122.848 16.6491 122.934 16.9772 123.107 17.2598C123.281 17.5332 123.554 17.8021 123.928 18.0664C124.311 18.3216 125.208 18.7865 126.621 19.4609C128.49 20.3542 129.77 21.252 130.463 22.1543C131.156 23.0475 131.502 24.1458 131.502 25.4492ZM143.615 14.252C142.02 14.252 140.785 14.8535 139.91 16.0566C139.035 17.2507 138.598 18.9186 138.598 21.0605C138.598 25.5176 140.27 27.7461 143.615 27.7461C145.019 27.7461 146.719 27.3952 148.715 26.6934V30.248C147.074 30.9316 145.242 31.2734 143.219 31.2734C140.311 31.2734 138.087 30.3939 136.547 28.6348C135.007 26.8665 134.236 24.3327 134.236 21.0332C134.236 18.9551 134.615 17.1367 135.371 15.5781C136.128 14.0104 137.212 12.8118 138.625 11.9824C140.047 11.1439 141.71 10.7246 143.615 10.7246C145.557 10.7246 147.507 11.194 149.467 12.1328L148.1 15.5781C147.352 15.2227 146.6 14.9128 145.844 14.6484C145.087 14.3841 144.344 14.252 143.615 14.252ZM165.217 31L163.768 26.2422H156.48L155.031 31H150.465L157.52 10.9297H162.701L169.783 31H165.217ZM162.756 22.6875C161.416 18.3763 160.66 15.9382 160.486 15.373C160.322 14.8079 160.204 14.3613 160.131 14.0332C159.83 15.1999 158.969 18.0846 157.547 22.6875H162.756ZM188.896 20.8145C188.896 24.1048 187.958 26.625 186.08 28.375C184.212 30.125 181.509 31 177.973 31H172.312V11.0117H178.588C181.851 11.0117 184.385 11.873 186.189 13.5957C187.994 15.3184 188.896 17.7246 188.896 20.8145ZM184.494 20.9238C184.494 16.6309 182.598 14.4844 178.807 14.4844H176.551V27.5H178.369C182.452 27.5 184.494 25.3079 184.494 20.9238ZM193.039 31V11.0117H197.277V31H193.039ZM220.041 31H214.654L205.959 15.8789H205.836C206.009 18.5495 206.096 20.4544 206.096 21.5938V31H202.309V11.0117H207.654L216.336 25.9824H216.432C216.295 23.3848 216.227 21.5482 216.227 20.4727V11.0117H220.041V31ZM232.674 19.7754H240.604V30.1387C239.318 30.5579 238.106 30.8496 236.967 31.0137C235.837 31.1868 234.679 31.2734 233.494 31.2734C230.477 31.2734 228.171 30.3893 226.576 28.6211C224.99 26.8438 224.197 24.2962 224.197 20.9785C224.197 17.752 225.118 15.2363 226.959 13.4316C228.809 11.627 231.37 10.7246 234.643 10.7246C236.693 10.7246 238.671 11.1348 240.576 11.9551L239.168 15.3457C237.71 14.6165 236.192 14.252 234.615 14.252C232.783 14.252 231.316 14.8672 230.213 16.0977C229.11 17.3281 228.559 18.9824 228.559 21.0605C228.559 23.2298 229.001 24.8887 229.885 26.0371C230.778 27.1764 232.072 27.7461 233.768 27.7461C234.652 27.7461 235.549 27.6549 236.461 27.4727V23.3027H232.674V19.7754ZM99.0996 47.8145C99.0996 51.1048 98.1608 53.625 96.2832 55.375C94.4147 57.125 91.7122 58 88.1758 58H82.5156V38.0117H88.791C92.054 38.0117 94.5879 38.873 96.3926 40.5957C98.1973 42.3184 99.0996 44.7246 99.0996 47.8145ZM94.6973 47.9238C94.6973 43.6309 92.8014 41.4844 89.0098 41.4844H86.7539V54.5H88.5723C92.6556 54.5 94.6973 52.3079 94.6973 47.9238ZM121.385 47.9785C121.385 51.2871 120.564 53.8301 118.924 55.6074C117.283 57.3848 114.932 58.2734 111.869 58.2734C108.807 58.2734 106.455 57.3848 104.814 55.6074C103.174 53.8301 102.354 51.278 102.354 47.9512C102.354 44.6243 103.174 42.0859 104.814 40.3359C106.464 38.5768 108.825 37.6973 111.896 37.6973C114.968 37.6973 117.315 38.5814 118.938 40.3496C120.569 42.1178 121.385 44.6608 121.385 47.9785ZM106.797 47.9785C106.797 50.2116 107.221 51.8932 108.068 53.0234C108.916 54.1536 110.183 54.7188 111.869 54.7188C115.251 54.7188 116.941 52.472 116.941 47.9785C116.941 43.4759 115.26 41.2246 111.896 41.2246C110.21 41.2246 108.939 41.7943 108.082 42.9336C107.225 44.0638 106.797 45.7454 106.797 47.9785ZM143.26 58H137.873L129.178 42.8789H129.055C129.228 45.5495 129.314 47.4544 129.314 48.5938V58H125.527V38.0117H130.873L139.555 52.9824H139.65C139.514 50.3848 139.445 48.5482 139.445 47.4727V38.0117H143.26V58ZM160.541 58L159.092 53.2422H151.805L150.355 58H145.789L152.844 37.9297H158.025L165.107 58H160.541ZM158.08 49.6875C156.74 45.3763 155.984 42.9382 155.811 42.373C155.646 41.8079 155.528 41.3613 155.455 41.0332C155.154 42.1999 154.293 45.0846 152.871 49.6875H158.08ZM175.348 58H171.109V41.5391H165.682V38.0117H180.775V41.5391H175.348V58ZM183.852 58V38.0117H188.09V58H183.852ZM211.264 47.9785C211.264 51.2871 210.443 53.8301 208.803 55.6074C207.162 57.3848 204.811 58.2734 201.748 58.2734C198.686 58.2734 196.334 57.3848 194.693 55.6074C193.053 53.8301 192.232 51.278 192.232 47.9512C192.232 44.6243 193.053 42.0859 194.693 40.3359C196.343 38.5768 198.704 37.6973 201.775 37.6973C204.847 37.6973 207.194 38.5814 208.816 40.3496C210.448 42.1178 211.264 44.6608 211.264 47.9785ZM196.676 47.9785C196.676 50.2116 197.1 51.8932 197.947 53.0234C198.795 54.1536 200.062 54.7188 201.748 54.7188C205.13 54.7188 206.82 52.472 206.82 47.9785C206.82 43.4759 205.139 41.2246 201.775 41.2246C200.089 41.2246 198.818 41.7943 197.961 42.9336C197.104 44.0638 196.676 45.7454 196.676 47.9785ZM233.139 58H227.752L219.057 42.8789H218.934C219.107 45.5495 219.193 47.4544 219.193 48.5938V58H215.406V38.0117H220.752L229.434 52.9824H229.529C229.393 50.3848 229.324 48.5482 229.324 47.4727V38.0117H233.139V58ZM249.982 52.4492C249.982 54.2539 249.331 55.6758 248.027 56.7148C246.733 57.7539 244.928 58.2734 242.613 58.2734C240.48 58.2734 238.594 57.8724 236.953 57.0703V53.1328C238.302 53.7344 239.441 54.1582 240.371 54.4043C241.31 54.6504 242.167 54.7734 242.941 54.7734C243.871 54.7734 244.582 54.5957 245.074 54.2402C245.576 53.8848 245.826 53.3561 245.826 52.6543C245.826 52.2624 245.717 51.916 245.498 51.6152C245.279 51.3053 244.956 51.0091 244.527 50.7266C244.108 50.444 243.247 49.9928 241.943 49.373C240.722 48.7988 239.806 48.2474 239.195 47.7188C238.585 47.1901 238.097 46.5749 237.732 45.873C237.368 45.1712 237.186 44.3509 237.186 43.4121C237.186 41.6439 237.783 40.2539 238.977 39.2422C240.18 38.2305 241.839 37.7246 243.953 37.7246C244.992 37.7246 245.981 37.8477 246.92 38.0938C247.868 38.3398 248.857 38.6862 249.887 39.1328L248.52 42.4277C247.453 41.9902 246.569 41.6849 245.867 41.5117C245.174 41.3385 244.491 41.252 243.816 41.252C243.014 41.252 242.399 41.4388 241.971 41.8125C241.542 42.1862 241.328 42.6738 241.328 43.2754C241.328 43.6491 241.415 43.9772 241.588 44.2598C241.761 44.5332 242.035 44.8021 242.408 45.0664C242.791 45.3216 243.689 45.7865 245.102 46.4609C246.97 47.3542 248.251 48.252 248.943 49.1543C249.636 50.0475 249.982 51.1458 249.982 52.4492Z" fill="#2D2C2C" />
          <path d="M58.8379 53.7232C58.8933 53.7598 58.9246 53.7985 58.9421 53.8293C56.0376 56.4003 52.622 58.5513 48.8265 60.1693C43.6767 62.3646 37.9876 63.5099 32.208 63.4999C26.4284 63.49 20.7449 62.3251 15.6058 60.1124C11.8191 58.4819 8.41461 56.3201 5.52297 53.7404C5.54055 53.7092 5.57232 53.6699 5.62874 53.633C5.68762 53.5945 5.78118 53.5582 5.94223 53.5774C6.11673 53.5982 6.32704 53.6836 6.50765 53.8477C9.392 56.4677 12.7683 58.6218 16.4817 60.2207C21.3874 62.3329 26.7694 63.4284 32.2122 63.4378C37.655 63.4471 43.0416 62.3702 47.9564 60.2751C51.6785 58.6884 55.0656 56.545 57.9624 53.9337C58.1429 53.771 58.3526 53.6867 58.5264 53.6667C58.6868 53.6483 58.7796 53.6847 58.8379 53.7232Z" stroke="#2D2C2C" stroke-width="7" />
          <path d="M57.8047 27.2728C57.8047 40.1861 46.5431 51.0456 32.1524 51.0456C17.7616 51.0456 6.5 40.1861 6.5 27.2728C6.5 14.3595 17.7616 3.5 32.1524 3.5C46.5431 3.5 57.8047 14.3595 57.8047 27.2728Z" fill="white" stroke="#2D2C2C" stroke-width="7" />
        </svg>

        ${rulesNotForOwner.length !== 0 && `<g style="user-select: none; -ms-user-select: none; -moz-user-select: none; -khtml-user-select: none; -webkit-user-select: none; -webkit-touch-callout: none; color: #2D2C2C;">
          <line stroke-linecap="round" x1="15" y1="100" x2="80" y2="100" stroke-width="5" stroke="#ddd" />
          <text x="100" font-family="Open Sans" className="unselectable" y="105">${truncate(fullName, 26)} - ${percentForOwner}%</text>
        </g>`}

        ${rulesNotForOwner.map((r, i) => `<g>
          <line stroke-linecap="round" x1="32" y1="${100 + (i === rulesNotForOwner.length - 1 ? 20 : 22) * i}" x2="32" y2="${125 + (i === rulesNotForOwner.length - 1 ? 20 : 22) * i}" stroke-width="5" stroke="#ddd" />
          <line stroke-linecap="round" x1="32" y1="${120 + 20 * i}" x2="100" y2="${120 + 20 * i}" stroke-width="5" stroke="#ddd" />
          <g style="user-select: none; -ms-user-select: none; -moz-user-select: none; -khtml-user-select: none; -webkit-user-select: none; -webkit-touch-callout: none; color: #2D2C2C;"><text font-family="Open Sans" font-weight="300" className="unselectable" x="120" y="${125 + 20 * i}">${truncate(r.repo, 24)} - ${r.percent}%</text></g>
        </g>)`)}
      </svg>
    `)
  }
}

